import tkinter as tk
from tkinter import messagebox


class QuizApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Online Quiz Platform")

        # Quiz Data: [Question, Options, Correct Answer]
        self.quiz_data = [
            ["What is the capital of France?", ["Berlin", "Madrid", "Paris", "Lisbon"], "Paris"],
            ["What is 5 + 3?", ["5", "8", "10", "15"], "8"],
            ["Who developed Python?", ["Guido van Rossum", "Elon Musk", "Mark Zuckerberg", "Dennis Ritchie"], "Guido van Rossum"],
            ["Which planet is known as the Red Planet?", ["Earth", "Mars", "Jupiter", "Saturn"], "Mars"],
            ["What is the boiling point of water?", ["90°C", "100°C", "80°C", "120°C"], "100°C"]
        ]

        self.current_question_index = 0
        self.score = 0

        # Display Question
        self.question_label = tk.Label(root, text="", font=("Helvetica", 16), wraplength=400, justify="center")
        self.question_label.pack(pady=20)

        # Options Frame
        self.options_frame = tk.Frame(root)
        self.options_frame.pack()

        self.option_vars = []
        for _ in range(4):
            var = tk.StringVar(value="")
            rb = tk.Radiobutton(self.options_frame, text="", variable=var, value="", font=("Helvetica", 14), anchor="w")
            rb.pack(anchor="w", pady=5)
            self.option_vars.append((var, rb))

        # Submit Button
        self.submit_btn = tk.Button(root, text="Submit Answer", command=self.submit_answer)
        self.submit_btn.pack(pady=20)

        self.update_question()

    def update_question(self):
        """Load the current question and options."""
        question, options, _ = self.quiz_data[self.current_question_index]
        self.question_label.config(text=f"Q{self.current_question_index + 1}: {question}")

        for i, (var, rb) in enumerate(self.option_vars):
            rb.config(text=options[i], value=options[i])
            var.set("")  # Reset selection

    def submit_answer(self):
        """Check the answer and handle correct/incorrect responses."""
        selected_option = None
        for var, _ in self.option_vars:
            if var.get():
                selected_option = var.get()
                break

        if not selected_option:
            messagebox.showwarning("No Answer", "Please select an answer before submitting!")
            return

        # Check if the answer is correct
        correct_answer = self.quiz_data[self.current_question_index][2]
        if selected_option == correct_answer:
            messagebox.showinfo("Correct!", "Well done, your answer is correct!")
            self.score += 1
            self.current_question_index += 1

            if self.current_question_index < len(self.quiz_data):
                self.update_question()
            else:
                self.show_result()
        else:
            messagebox.showwarning("Incorrect!", "Wrong answer! Please try again.")

    def show_result(self):
        """Display the quiz result."""
        messagebox.showinfo("Quiz Completed", f"You scored {self.score}/{len(self.quiz_data)}.")
        self.root.quit()


if __name__ == "__main__":
    root = tk.Tk()
    app = QuizApp(root)
    root.mainloop()
